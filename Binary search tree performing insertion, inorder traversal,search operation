#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
struct node
{
int data;
struct node* right;
struct node* left;
};
struct node* getnode(int data)
{
struct node* new = (struct node*) malloc ( sizeof(struct node));
new->data=data;
new->left=NULL;
new->right=NULL;
return new;
}
struct node* insert(struct node*root,int data)
{
if(root==NULL)
{
root=getnode(data);
}
else if (root<=root->data)
{
root->left=insert(root->left,data);
}
else{
root->right=insert(root->right,data);
}
return root;
}
bool search (struct node* root,int data)
{
if(root==NULL)
{
return false;
}
else if(root->data==data)
{
return true;
}
else if(data<=root->data)
{
return search(root->left,data);
}
else
{
return search (root->right,data);
}}
void inorder (struct node* root)
{
if(root!=NULL)
{
inorder(root->left);
printf("%d\t",root->data);
inorder (root->right);
}}
int main()
{
struct node* root=NULL;
printf("insertion:");
root=insert(root,10);
root=insert(root,33);
root=insert(root,40);
inorder (root);
int n;
printf("\nenter no:");
scanf("%d",&n);
if(search(root,n)==true)
{
printf("found");
}
else{
printf("not found");
}
}
